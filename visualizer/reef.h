#ifndef REEF_H
#define REEF_H

#include <QObject>
#include <QThread>
#include <QElapsedTimer>
#include "igame.h"
#include "animsequence.h"
#include <map>
#include <string>
#include <list>

// The Codegen's Parser
#include "parser/parser.h"
#include "parser/structures.h"

using namespace std;

namespace visualizer
{
    class Reef: public QThread, public AnimSequence, public IGame
    {
        Q_OBJECT;
        Q_INTERFACES( visualizer::IGame );
        public: 
            Reef();
            ~Reef();

            PluginInfo getPluginInfo();
            void loadGamelog( std::string gamelog );

            void run(); //main function
            void setup();
            void destroy();

            void preDraw();
            void postDraw();

            void addCurrentBoard();
    
            map<string, int> programs;
            
            list<int> getSelectedUnits();
        private:
            parser::Game *m_game;  // The Game Object from parser/structures.h that is generated by the Codegen
            QElapsedTimer m_WaterTimer;
            bool m_suicide;

            void BuildWorld(class Map* pMap);
    }; 

} // visualizer

#endif // REEF_H
